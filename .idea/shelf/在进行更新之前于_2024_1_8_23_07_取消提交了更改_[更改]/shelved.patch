Index: health_tracker/health_app_tkinter/devices.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import tkinter as tk\r\nfrom tkinter import ttk\r\nfrom tkinter import messagebox\r\nimport matplotlib.pyplot as plt\r\nfrom abc import ABC, abstractmethod\r\n\r\nfrom ..tracker.util import *\r\n\r\n\r\nclass AbstractInputWindow(ABC):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        self.root = root\r\n        self.user_id = user_id\r\n        self.filename = filename\r\n\r\n        # 创建输入框\r\n        self.entry = ttk.Entry(root)\r\n        self.entry.grid(row=0, column=0, pady=10, padx=10)\r\n\r\n        # 创建提交按钮\r\n        submit_button = ttk.Button(root, text=\"提交\", command=self.submit_data)\r\n        submit_button.grid(row=1, column=0, pady=10, padx=10)\r\n\r\n    @abstractmethod\r\n    def submit_data(self):\r\n        pass\r\n\r\nclass NutrientIntakeWindow(AbstractInputWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日摄入营养素\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日摄入营养素已记录。\")\r\n\r\nclass CalorieIntakeOutputWindow(AbstractInputWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日卡路里摄入与消耗量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日卡路里摄入与消耗量已记录。\")\r\n\r\nclass DeviceUsageWindow(AbstractInputWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日电子设备使用时间\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日电子设备使用时间已记录。\")\r\n\r\n\r\nclass DailyWaterIntakeWindow(NutrientIntakeWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日饮水量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日饮水量已记录。\")\r\n\r\nclass FiberIntakeWindow(NutrientIntakeWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日膳食纤维摄入量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日膳食纤维摄入量已记录。\")\r\n\r\nclass ProteinIntakeWindow(NutrientIntakeWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日蛋白质摄入量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日蛋白质摄入量已记录。\")\r\n\r\nclass FatIntakeWindow(NutrientIntakeWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日脂肪摄入量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日脂肪摄入量已记录。\")\r\n\r\nclass MealCalorieIntakeWindow(CalorieIntakeOutputWindow):\r\n    def __init__(self, root, user_id: str, filename: str, meal_type: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(f\"{meal_type}的卡路里摄入量\")\r\n        self.meal_type = meal_type\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, f\"{self.filename}_{self.meal_type}\", data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", f\"{self.meal_type}的卡路里摄入量已记录。\")\r\n\r\n    @classmethod\r\n    def create_meal_windows(cls, root, user_id: str, filename: str):\r\n        meal_types = [\"早餐\", \"中餐\", \"晚餐\"]\r\n        return [cls(root, user_id, filename, meal_type) for meal_type in meal_types]\r\n\r\nclass FruitCalorieIntakeWindow(CalorieIntakeOutputWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日水果卡路里摄入量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日水果卡路里摄入量已记录。\")\r\n\r\nclass BeverageCalorieIntakeWindow(CalorieIntakeOutputWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日饮品卡路里摄入量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日饮品卡路里摄入量已记录。\")\r\n\r\nclass FitnessFoodCalorieIntakeWindow(CalorieIntakeOutputWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日健身食品卡路里摄入量\")\r\n\r\n    def submit_data(self):\r\n        data = self.entry.get()\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"一日健身食品卡路里摄入量已记录。\")\r\n\r\nclass ExerciseCalorieOutputWindow(CalorieIntakeOutputWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"一日体育活动卡路里消耗量\")\r\n\r\n        # 创建活动名称输入框\r\n        self.activity_label = tk.Label(root, text=\"请输入体育活动名称：\")\r\n        self.activity_label.grid(row=1, column=0, pady=10, padx=10)\r\n        self.activity_entry = ttk.Entry(root)\r\n        self.activity_entry.grid(row=1, column=1, pady=10, padx=10)\r\n\r\n        # 创建活动时长输入框\r\n        self.duration_label = tk.Label(root, text=\"请输入活动时长（分钟）：\")\r\n        self.duration_label.grid(row=2, column=0, pady=10, padx=10)\r\n        self.duration_entry = ttk.Entry(root)\r\n        self.duration_entry.grid(row=2, column=1, pady=10, padx=10)\r\n\r\n        # 卡路里消耗量字典\r\n        self.calorie_dict = {\r\n            \"游泳\": 175,\r\n            \"田径\": 450,\r\n            \"篮球\": 250,\r\n            \"自行车\": 330,\r\n            \"慢跑\": 300,\r\n            \"散步\": 75\r\n        }\r\n\r\n        # 用户输入和运动类别的映射\r\n        self.activity_mapping = {\r\n            \"游\": \"游泳\",\r\n            \"快跑\": \"田径\",\r\n            \"一千米\":\"田径\",\r\n            \"走\": \"散步\",\r\n            \"球\": \"篮球\",\r\n            \"车\": \"自行车\",\r\n        }\r\n\r\n    def submit_data(self):\r\n        user_input = self.activity_entry.get()\r\n        duration = float(self.duration_entry.get())\r\n        # 根据用户输入获取运动类别\r\n        activity = self.activity_mapping.get(user_input, \"\")\r\n        # 根据运动类别获取每半小时消耗的卡路里\r\n        calorie_per_half_hour = self.calorie_dict.get(activity, 0)\r\n        # 计算消耗的卡路里\r\n        calories = duration / 30 * calorie_per_half_hour\r\n        data = {\"activity\": activity, \"duration\": duration, \"calories\": calories}\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        self.activity_entry.delete(0, 'end')\r\n        self.duration_entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", f\"一日体育活动卡路里消耗量已记录。消耗的卡路里为：{calories} 卡\")\r\n\r\nclass PhoneUsageWindow(DeviceUsageWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"手机日使用时长\")\r\n\r\n        # 创建手机日使用时间\r\n        duration_label = tk.Label(root, text=f\"请输入手机的日使用时长（分钟）：     \")\r\n        duration_label.grid(row=0, column=0, pady=10, padx=10, sticky=\"w\")\r\n        self.entry = ttk.Entry(self.root)\r\n        self.entry.grid(row=0, column=1, pady=10, padx=10, sticky=\"w\")\r\n\r\n\r\n        # 创建娱乐、学习、工作、生活各方面的使用时间输入框\r\n        self.usage_categories = [\"Amusement\", \"Study\", \"Work\", \"Life\"]\r\n        self.category_entries = {}\r\n        for i, category in enumerate(self.usage_categories):\r\n            label = tk.Label(root, text=f\"请输入手机在{category}方面的使用时长（分钟）：\")\r\n            label.grid(row=i+1, column=0, pady=10, padx=10)\r\n            entry = ttk.Entry(root)\r\n            entry.grid(row=i+1, column=1, pady=10, padx=10)\r\n            # 创建上限时间标签\r\n            self.limit_time = tk.StringVar()\r\n            limit_label = ttk.Label(self.root, textvariable=self.limit_time)\r\n            limit_label.grid(row=0, column=2, pady=10, padx=10, sticky=\"w\")\r\n            self.category_entries[category] = entry\r\n        # 创建“绘制饼图”按钮\r\n        pie_chart_button = ttk.Button(self.root, text=\"绘制饼图\", command=self.submit_data)\r\n        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky=\"w\")\r\n\r\n    def submit_data(self):\r\n        total_duration = float(self.entry.get())\r\n        self.limit_time.set(f\"/{total_duration}\")  # 更新上限时间标签\r\n        category_durations = {category: float(entry.get()) for category, entry in self.category_entries.items()}\r\n        category_ratios = {category: duration / total_duration for category, duration in category_durations.items()}\r\n        data = {\"device\": \"手机\", \"total_duration\": total_duration, \"category_durations\": category_durations, \"category_ratios\": category_ratios}\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        for entry in self.category_entries.values():\r\n            entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"手机日使用时长已记录。\")\r\n\r\n        # 绘制饼图\r\n        plt.figure(figsize=(6,6))\r\n        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')\r\n        plt.title(\"Proportion of Mobile Phone usage time\")\r\n        plt.show()\r\n\r\nclass EarphoneUsageWindow(DeviceUsageWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"无线耳机日使用时长\")\r\n\r\n        # 创建无线耳机日使用时间\r\n        duration_label = tk.Label(root, text=f\"请输入无线耳机的日使用时长（分钟）：     \")\r\n        duration_label.grid(row=0, column=0, pady=10, padx=10, sticky=\"w\")\r\n        self.entry = ttk.Entry(self.root)\r\n        self.entry.grid(row=0, column=1, pady=10, padx=10, sticky=\"w\")\r\n\r\n        # 创建娱乐、学习、工作、生活各方面的使用时间输入框\r\n        self.usage_categories = [\"Amusement\", \"Study\", \"Work\", \"Life\"]\r\n        self.category_entries = {}\r\n        for i, category in enumerate(self.usage_categories):\r\n            label = tk.Label(root, text=f\"请输入无线耳机在{category}方面的使用时长（分钟）：\")\r\n            label.grid(row=i + 1, column=0, pady=10, padx=10)\r\n            entry = ttk.Entry(root)\r\n            entry.grid(row=i + 1, column=1, pady=10, padx=10)\r\n            # 创建上限时间标签\r\n            self.limit_time = tk.StringVar()\r\n            limit_label = ttk.Label(self.root, textvariable=self.limit_time)\r\n            limit_label.grid(row=0, column=2, pady=10, padx=10, sticky=\"w\")\r\n            self.category_entries[category] = entry\r\n        # 创建“绘制饼图”按钮\r\n        pie_chart_button = ttk.Button(self.root, text=\"绘制饼图\", command=self.submit_data)\r\n        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky=\"w\")\r\n\r\n    def submit_data(self):\r\n        total_duration = float(self.entry.get())\r\n        self.limit_time.set(f\"/{total_duration}\")  # 更新上限时间标签\r\n        category_durations = {category: float(entry.get()) for category, entry in self.category_entries.items()}\r\n        category_ratios = {category: duration / total_duration for category, duration in category_durations.items()}\r\n        data = {\"device\": \"无线耳机\", \"total_duration\": total_duration, \"category_durations\": category_durations,\r\n                \"category_ratios\": category_ratios}\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        for entry in self.category_entries.values():\r\n            entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"无线耳机日使用时长已记录。\")\r\n\r\n        # 绘制饼图\r\n        plt.figure(figsize=(6, 6))\r\n        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')\r\n        plt.title(\"Proportion of Earphone usage time\")\r\n        plt.show()\r\n\r\nclass ComputerUsageWindow(DeviceUsageWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"电脑日使用时长\")\r\n\r\n        # 创建电脑日使用时间\r\n        duration_label = tk.Label(root, text=f\"请输入电脑的日使用时长（分钟）：     \")\r\n        duration_label.grid(row=0, column=0, pady=10, padx=10, sticky=\"w\")\r\n        self.entry = ttk.Entry(self.root)\r\n        self.entry.grid(row=0, column=1, pady=10, padx=10, sticky=\"w\")\r\n\r\n        # 创建娱乐、学习、工作、生活各方面的使用时间输入框\r\n        self.usage_categories = [\"Amusement\", \"Study\", \"Work\", \"Life\"]\r\n        self.category_entries = {}\r\n        for i, category in enumerate(self.usage_categories):\r\n            label = tk.Label(root, text=f\"请输入电脑在{category}方面的使用时长（分钟）：\")\r\n            label.grid(row=i + 1, column=0, pady=10, padx=10)\r\n            entry = ttk.Entry(root)\r\n            entry.grid(row=i + 1, column=1, pady=10, padx=10)\r\n            # 创建上限时间标签\r\n            self.limit_time = tk.StringVar()\r\n            limit_label = ttk.Label(self.root, textvariable=self.limit_time)\r\n            limit_label.grid(row=0, column=2, pady=10, padx=10, sticky=\"w\")\r\n            self.category_entries[category] = entry\r\n        # 创建“绘制饼图”按钮\r\n        pie_chart_button = ttk.Button(self.root, text=\"绘制饼图\", command=self.submit_data)\r\n        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky=\"w\")\r\n\r\n    def submit_data(self):\r\n        total_duration = float(self.entry.get())\r\n        self.limit_time.set(f\"/{total_duration}\")  # 更新上限时间标签\r\n        category_durations = {category: float(entry.get()) for category, entry in self.category_entries.items()}\r\n        category_ratios = {category: duration / total_duration for category, duration in category_durations.items()}\r\n        data = {\"device\": \"电脑\", \"total_duration\": total_duration, \"category_durations\": category_durations,\r\n                \"category_ratios\": category_ratios}\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        for entry in self.category_entries.values():\r\n            entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"电脑日使用时长已记录。\")\r\n\r\n        # 绘制饼图\r\n        plt.figure(figsize=(6, 6))\r\n        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')\r\n        plt.title(\"Proportion of Computer usage time\")\r\n        plt.show()\r\n\r\nclass PadUsageWindow(DeviceUsageWindow):\r\n    def __init__(self, root, user_id: str, filename: str):\r\n        super().__init__(root, user_id, filename)\r\n        self.root.title(\"Pad日使用时长\")\r\n\r\n        # 创建手机日使用时间\r\n        duration_label = tk.Label(root, text=f\"请输入Pad的日使用时长（分钟）：     \")\r\n        duration_label.grid(row=0, column=0, pady=10, padx=10, sticky=\"w\")\r\n        self.entry = ttk.Entry(self.root)\r\n        self.entry.grid(row=0, column=1, pady=10, padx=10, sticky=\"w\")\r\n\r\n        # 创建娱乐、学习、工作、生活各方面的使用时间输入框\r\n        self.usage_categories = [\"Amusement\", \"Study\", \"Work\", \"Life\"]\r\n        self.category_entries = {}\r\n        for i, category in enumerate(self.usage_categories):\r\n            label = tk.Label(root, text=f\"请输入Pad在{category}方面的使用时长（分钟）：\")\r\n            label.grid(row=i + 1, column=0, pady=10, padx=10)\r\n            entry = ttk.Entry(root)\r\n            entry.grid(row=i + 1, column=1, pady=10, padx=10)\r\n            # 创建上限时间标签\r\n            self.limit_time = tk.StringVar()\r\n            limit_label = ttk.Label(self.root, textvariable=self.limit_time)\r\n            limit_label.grid(row=0, column=2, pady=10, padx=10, sticky=\"w\")\r\n            self.category_entries[category] = entry\r\n        # 创建“绘制饼图”按钮\r\n        pie_chart_button = ttk.Button(self.root, text=\"绘制饼图\", command=self.submit_data)\r\n        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky=\"w\")\r\n\r\n    def submit_data(self):\r\n        total_duration = float(self.entry.get())\r\n        self.limit_time.set(f\"/{total_duration}\")  # 更新上限时间标签\r\n        category_durations = {category: float(entry.get()) for category, entry in self.category_entries.items()}\r\n        category_ratios = {category: duration / total_duration for category, duration in category_durations.items()}\r\n        data = {\"device\": \"Pad\", \"total_duration\": total_duration, \"category_durations\": category_durations,\r\n                \"category_ratios\": category_ratios}\r\n        UserLocalFileStorage.write_data(self.user_id, self.filename, data)\r\n        self.entry.delete(0, 'end')\r\n        for entry in self.category_entries.values():\r\n            entry.delete(0, 'end')\r\n        messagebox.showinfo(\"信息\", \"Pad日使用时长已记录。\")\r\n\r\n        # 绘制饼图\r\n        plt.figure(figsize=(6, 6))\r\n        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')\r\n        plt.title(\"Proportion of Pad usage time\")\r\n        plt.show()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/health_tracker/health_app_tkinter/devices.py b/health_tracker/health_app_tkinter/devices.py
--- a/health_tracker/health_app_tkinter/devices.py	(revision 925c678290a9f08e7bae1d029a1af0f5634f95dc)
+++ b/health_tracker/health_app_tkinter/devices.py	(date 1704726034087)
@@ -231,9 +231,9 @@
             limit_label = ttk.Label(self.root, textvariable=self.limit_time)
             limit_label.grid(row=0, column=2, pady=10, padx=10, sticky="w")
             self.category_entries[category] = entry
-        # 创建“绘制饼图”按钮
-        pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
-        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
+        # # 创建“绘制饼图”按钮
+        # pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
+        # pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
 
     def submit_data(self):
         total_duration = float(self.entry.get())
@@ -247,11 +247,11 @@
             entry.delete(0, 'end')
         messagebox.showinfo("信息", "手机日使用时长已记录。")
 
-        # 绘制饼图
-        plt.figure(figsize=(6,6))
-        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
-        plt.title("Proportion of Mobile Phone usage time")
-        plt.show()
+        # # 绘制饼图
+        # plt.figure(figsize=(6,6))
+        # plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
+        # plt.title("Proportion of Mobile Phone usage time")
+        # plt.show()
 
 class EarphoneUsageWindow(DeviceUsageWindow):
     def __init__(self, root, user_id: str, filename: str):
@@ -277,9 +277,9 @@
             limit_label = ttk.Label(self.root, textvariable=self.limit_time)
             limit_label.grid(row=0, column=2, pady=10, padx=10, sticky="w")
             self.category_entries[category] = entry
-        # 创建“绘制饼图”按钮
-        pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
-        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
+        # # 创建“绘制饼图”按钮
+        # pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
+        # pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
 
     def submit_data(self):
         total_duration = float(self.entry.get())
@@ -294,11 +294,11 @@
             entry.delete(0, 'end')
         messagebox.showinfo("信息", "无线耳机日使用时长已记录。")
 
-        # 绘制饼图
-        plt.figure(figsize=(6, 6))
-        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
-        plt.title("Proportion of Earphone usage time")
-        plt.show()
+        # # 绘制饼图
+        # plt.figure(figsize=(6, 6))
+        # plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
+        # plt.title("Proportion of Earphone usage time")
+        # plt.show()
 
 class ComputerUsageWindow(DeviceUsageWindow):
     def __init__(self, root, user_id: str, filename: str):
@@ -324,9 +324,9 @@
             limit_label = ttk.Label(self.root, textvariable=self.limit_time)
             limit_label.grid(row=0, column=2, pady=10, padx=10, sticky="w")
             self.category_entries[category] = entry
-        # 创建“绘制饼图”按钮
-        pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
-        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
+        # # 创建“绘制饼图”按钮
+        # pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
+        # pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
 
     def submit_data(self):
         total_duration = float(self.entry.get())
@@ -341,11 +341,11 @@
             entry.delete(0, 'end')
         messagebox.showinfo("信息", "电脑日使用时长已记录。")
 
-        # 绘制饼图
-        plt.figure(figsize=(6, 6))
-        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
-        plt.title("Proportion of Computer usage time")
-        plt.show()
+        # # 绘制饼图
+        # plt.figure(figsize=(6, 6))
+        # plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
+        # plt.title("Proportion of Computer usage time")
+        # plt.show()
 
 class PadUsageWindow(DeviceUsageWindow):
     def __init__(self, root, user_id: str, filename: str):
@@ -371,9 +371,9 @@
             limit_label = ttk.Label(self.root, textvariable=self.limit_time)
             limit_label.grid(row=0, column=2, pady=10, padx=10, sticky="w")
             self.category_entries[category] = entry
-        # 创建“绘制饼图”按钮
-        pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
-        pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
+        # # 创建“绘制饼图”按钮
+        # pie_chart_button = ttk.Button(self.root, text="绘制饼图", command=self.submit_data)
+        # pie_chart_button.grid(row=0, column=4, pady=10, padx=10, sticky="w")
 
     def submit_data(self):
         total_duration = float(self.entry.get())
@@ -388,8 +388,8 @@
             entry.delete(0, 'end')
         messagebox.showinfo("信息", "Pad日使用时长已记录。")
 
-        # 绘制饼图
-        plt.figure(figsize=(6, 6))
-        plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
-        plt.title("Proportion of Pad usage time")
-        plt.show()
\ No newline at end of file
+        # # 绘制饼图
+        # plt.figure(figsize=(6, 6))
+        # plt.pie(category_ratios.values(), labels=category_ratios.keys(), autopct='%1.1f%%')
+        # plt.title("Proportion of Pad usage time")
+        # plt.show()
\ No newline at end of file
Index: log.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>���� search_by_field_all ����ʱ��Ϊ��0.05409860610961914 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.24872922897338867 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.24971270561218262 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2577695846557617 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05453300476074219 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2643404006958008 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2643404006958008 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.27334022521972656 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04716205596923828 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25095033645629883 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2519676685333252 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.25984978675842285 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.054970502853393555 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.26673126220703125 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.26673126220703125 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.274735689163208 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.045018672943115234 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2564547061920166 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25745248794555664 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2654898166656494 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.022352218627929688 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.07519841194152832 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.07519841194152832 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07929778099060059 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.059448957443237305 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2473456859588623 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2473456859588623 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2619755268096924 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05474519729614258 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.252910852432251 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25384974479675293 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2623598575592041 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.060801029205322266 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25832176208496094 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25832176208496094 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2639732360839844 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.060964345932006836 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.27768540382385254 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.27768540382385254 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2861471176147461 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05334329605102539 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.24128007888793945 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2416982650756836 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.256913423538208 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.029712677001953125 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.07260465621948242 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.07260465621948242 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07556724548339844 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06339716911315918 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25783300399780273 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25783300399780273 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26289868354797363 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.057489871978759766 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.26070332527160645 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.26070332527160645 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2683732509613037 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05389809608459473 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25130295753479004 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25130295753479004 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.267352819442749 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.0628044605255127 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2678377628326416 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2687830924987793 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2707328796386719 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06762552261352539 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.26143646240234375 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.26143646240234375 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2624635696411133 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.030283212661743164 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.07906007766723633 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.07906007766723633 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.0830533504486084 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06078815460205078 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25818347930908203 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25818347930908203 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26917290687561035 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06475663185119629 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2608349323272705 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2608349323272705 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26903724670410156 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.0504460334777832 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.24077153205871582 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.24176883697509766 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.25040674209594727 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05593466758728027 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25936174392700195 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2603623867034912 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26760435104370117 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05271506309509277 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.21892666816711426 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.21892666816711426 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.22592568397521973 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.02588629722595215 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06864285469055176 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06963992118835449 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07301878929138184 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05312991142272949 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23250269889831543 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.23250269889831543 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.24192142486572266 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05862569808959961 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2428903579711914 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2428903579711914 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2501366138458252 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.0609281063079834 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25126171112060547 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2521553039550781 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.25955986976623535 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06544017791748047 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25907301902770996 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25913000106811523 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26863694190979004 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05419731140136719 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.21964502334594727 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.21964502334594727 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.22698044776916504 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.026007652282714844 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06985974311828613 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06985974311828613 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07398843765258789 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.052817344665527344 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23064208030700684 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.23064208030700684 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.23891472816467285 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.0550684928894043 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.24361562728881836 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.24361562728881836 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2516641616821289 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05621170997619629 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23694300651550293 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.23694300651550293 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.24590301513671875 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04841804504394531 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2401127815246582 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2401127815246582 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.24731898307800293 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.055188655853271484 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2228069305419922 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2228069305419922 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2338719367980957 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.024258852005004883 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06530451774597168 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06530451774597168 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.06946825981140137 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05884528160095215 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.24492597579956055 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.24492597579956055 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2549259662628174 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06353139877319336 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2527332305908203 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2527332305908203 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26103734970092773 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05797600746154785 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.24369454383850098 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.24369454383850098 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.25220608711242676 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05652356147766113 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2744710445404053 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.27730798721313477 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2859516143798828 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.058237552642822266 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.22158050537109375 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.22158050537109375 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2299058437347412 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.026547670364379883 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06778240203857422 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06778240203857422 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07191896438598633 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.053107261657714844 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.22214770317077637 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2231447696685791 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2315366268157959 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.0559844970703125 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2291243076324463 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2291243076324463 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.23642516136169434 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.054238080978393555 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.21694397926330566 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.21694397926330566 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.22729706764221191 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.053206443786621094 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23552894592285156 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.23552894592285156 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.24275588989257812 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.051114559173583984 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.21652483940124512 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.21652483940124512 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.22403192520141602 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.026115894317626953 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06759405136108398 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06759405136108398 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07262706756591797 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06316328048706055 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2553830146789551 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2553830146789551 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2553830146789551 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05602455139160156 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.26078176498413086 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.26078176498413086 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.27269697189331055 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04749274253845215 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.22264528274536133 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.22264528274536133 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.23826837539672852 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.07898139953613281 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.27892637252807617 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.27892637252807617 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.27892637252807617 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04747486114501953 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.22151947021484375 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.22151947021484375 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2372574806213379 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.016206026077270508 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06406784057617188 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06406784057617188 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.06406784057617188 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05489087104797363 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23869657516479492 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.23869657516479492 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.24771499633789062 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.050435781478881836 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23771381378173828 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2533390522003174 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.258044958114624 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05886697769165039 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.22032523155212402 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.22032523155212402 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.22032523155212402 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06302809715270996 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2456674575805664 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2456674575805664 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2456674575805664 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04713082313537598 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2208702564239502 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2208702564239502 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.22750210762023926 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.015629291534423828 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06266117095947266 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06266117095947266 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.06266117095947266 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04710268974304199 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2550222873687744 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2550222873687744 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26793575286865234 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.0656747817993164 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2667386531829834 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.26773691177368164 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26773691177368164 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04912996292114258 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2266697883605957 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2266697883605957 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.23088908195495605 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04751276969909668 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2323451042175293 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2323451042175293 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.24024343490600586 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04686617851257324 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.20529437065124512 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.20529437065124512 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.22102904319763184 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.015726089477539062 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.06263566017150879 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.06263566017150879 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07724499702453613 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04735231399536133 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.2532920837402344 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.2532920837402344 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.26239442825317383 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.05381512641906738 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.26489973068237305 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.26489973068237305 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.28058552742004395 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.044120073318481445 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23550820350646973 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.23550820350646973 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.24863719940185547 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.04959511756896973 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.25896191596984863 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.25896191596984863 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.2745189666748047 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.06260895729064941 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.23704767227172852 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.23704767227172852 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.23704767227172852 ��\r\n���� search_by_field_all ����ʱ��Ϊ��0.031378746032714844 ��\r\n���� get_data_by_date ����ʱ��Ϊ��0.07017922401428223 ��\r\n���� get_daily_total ����ʱ��Ϊ��0.07017922401428223 ��\r\n���� get_latest_daily_total ����ʱ��Ϊ��0.07017922401428223 ��\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/log.txt b/log.txt
--- a/log.txt	(revision 925c678290a9f08e7bae1d029a1af0f5634f95dc)
+++ b/log.txt	(date 1704726078533)
@@ -286,3 +286,99 @@
 ���� get_data_by_date ����ʱ��Ϊ��0.07017922401428223 ��
 ���� get_daily_total ����ʱ��Ϊ��0.07017922401428223 ��
 ���� get_latest_daily_total ����ʱ��Ϊ��0.07017922401428223 ��
+���� search_by_field_all ����ʱ��Ϊ��0.1365523338317871 ��
+���� get_data_by_date ����ʱ��Ϊ��0.3305215835571289 ��
+���� get_daily_total ����ʱ��Ϊ��0.3305215835571289 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.34818506240844727 ��
+���� search_by_field_all ����ʱ��Ϊ��0.1599438190460205 ��
+���� get_data_by_date ����ʱ��Ϊ��0.3369429111480713 ��
+���� get_daily_total ����ʱ��Ϊ��0.33804750442504883 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.348217248916626 ��
+���� search_by_field_all ����ʱ��Ϊ��0.15169477462768555 ��
+���� get_data_by_date ����ʱ��Ϊ��0.32637453079223633 ��
+���� get_daily_total ����ʱ��Ϊ��0.32637453079223633 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.33240246772766113 ��
+���� search_by_field_all ����ʱ��Ϊ��0.14934968948364258 ��
+���� get_data_by_date ����ʱ��Ϊ��0.35793256759643555 ��
+���� get_daily_total ����ʱ��Ϊ��0.35793256759643555 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.3684048652648926 ��
+���� search_by_field_all ����ʱ��Ϊ��0.16628551483154297 ��
+���� get_data_by_date ����ʱ��Ϊ��0.3403639793395996 ��
+���� get_daily_total ����ʱ��Ϊ��0.3403639793395996 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.34387755393981934 ��
+���� search_by_field_all ����ʱ��Ϊ��0.07740283012390137 ��
+���� get_data_by_date ����ʱ��Ϊ��0.11114358901977539 ��
+���� get_daily_total ����ʱ��Ϊ��0.11114358901977539 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.11114358901977539 ��
+���� search_by_field_all ����ʱ��Ϊ��0.06476926803588867 ��
+���� get_data_by_date ����ʱ��Ϊ��0.23308825492858887 ��
+���� get_daily_total ����ʱ��Ϊ��0.23308825492858887 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.24872136116027832 ��
+���� search_by_field_all ����ʱ��Ϊ��0.05749869346618652 ��
+���� get_data_by_date ����ʱ��Ϊ��0.24088239669799805 ��
+���� get_daily_total ����ʱ��Ϊ��0.24088239669799805 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.2573270797729492 ��
+���� search_by_field_all ����ʱ��Ϊ��0.06437945365905762 ��
+���� get_data_by_date ����ʱ��Ϊ��0.25356173515319824 ��
+���� get_daily_total ����ʱ��Ϊ��0.25356173515319824 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.25356173515319824 ��
+���� search_by_field_all ����ʱ��Ϊ��0.049887657165527344 ��
+���� get_data_by_date ����ʱ��Ϊ��0.24961137771606445 ��
+���� get_daily_total ����ʱ��Ϊ��0.24961137771606445 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.24961137771606445 ��
+���� search_by_field_all ����ʱ��Ϊ��0.05146932601928711 ��
+���� get_data_by_date ����ʱ��Ϊ��0.22323942184448242 ��
+���� get_daily_total ����ʱ��Ϊ��0.22323942184448242 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.23898887634277344 ��
+���� search_by_field_all ����ʱ��Ϊ��0.03177928924560547 ��
+���� get_data_by_date ����ʱ��Ϊ��0.07931804656982422 ��
+���� get_daily_total ����ʱ��Ϊ��0.07931804656982422 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.07931804656982422 ��
+���� search_by_field_all ����ʱ��Ϊ��0.04622673988342285 ��
+���� get_data_by_date ����ʱ��Ϊ��0.25183629989624023 ��
+���� get_daily_total ����ʱ��Ϊ��0.25183629989624023 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.2678959369659424 ��
+���� search_by_field_all ����ʱ��Ϊ��0.06857705116271973 ��
+���� get_data_by_date ����ʱ��Ϊ��0.2734339237213135 ��
+���� get_daily_total ����ʱ��Ϊ��0.2734339237213135 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.2734339237213135 ��
+���� search_by_field_all ����ʱ��Ϊ��0.04742121696472168 ��
+���� get_data_by_date ����ʱ��Ϊ��0.2572603225708008 ��
+���� get_daily_total ����ʱ��Ϊ��0.25966978073120117 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.25966978073120117 ��
+���� search_by_field_all ����ʱ��Ϊ��0.047995567321777344 ��
+���� get_data_by_date ����ʱ��Ϊ��0.25760507583618164 ��
+���� get_daily_total ����ʱ��Ϊ��0.25760507583618164 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.25760507583618164 ��
+���� search_by_field_all ����ʱ��Ϊ��0.05746030807495117 ��
+���� get_data_by_date ����ʱ��Ϊ��0.24093222618103027 ��
+���� get_daily_total ����ʱ��Ϊ��0.24093222618103027 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.2523994445800781 ��
+���� search_by_field_all ����ʱ��Ϊ��0.015629053115844727 ��
+���� get_data_by_date ����ʱ��Ϊ��0.06900644302368164 ��
+���� get_daily_total ����ʱ��Ϊ��0.06900644302368164 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.06900644302368164 ��
+���� search_by_field_all ����ʱ��Ϊ��0.04689645767211914 ��
+���� get_data_by_date ����ʱ��Ϊ��0.23674368858337402 ��
+���� get_daily_total ����ʱ��Ϊ��0.23674368858337402 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.2621762752532959 ��
+���� search_by_field_all ����ʱ��Ϊ��0.04828763008117676 ��
+���� get_data_by_date ����ʱ��Ϊ��0.2386183738708496 ��
+���� get_daily_total ����ʱ��Ϊ��0.2386183738708496 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.2494947910308838 ��
+���� search_by_field_all ����ʱ��Ϊ��0.05748176574707031 ��
+���� get_data_by_date ����ʱ��Ϊ��0.27713680267333984 ��
+���� get_daily_total ����ʱ��Ϊ��0.27713680267333984 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.28287339210510254 ��
+���� search_by_field_all ����ʱ��Ϊ��0.06249499320983887 ��
+���� get_data_by_date ����ʱ��Ϊ��0.28003621101379395 ��
+���� get_daily_total ����ʱ��Ϊ��0.28003621101379395 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.28003621101379395 ��
+���� search_by_field_all ����ʱ��Ϊ��0.04698681831359863 ��
+���� get_data_by_date ����ʱ��Ϊ��0.23730230331420898 ��
+���� get_daily_total ����ʱ��Ϊ��0.23730230331420898 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.2398087978363037 ��
+���� search_by_field_all ����ʱ��Ϊ��0.03244614601135254 ��
+���� get_data_by_date ����ʱ��Ϊ��0.07886457443237305 ��
+���� get_daily_total ����ʱ��Ϊ��0.07886457443237305 ��
+���� get_latest_daily_total ����ʱ��Ϊ��0.07886457443237305 ��
